name: "DOCKER Build and Deploy Site"

on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: '0 0 * * 2'
  workflow_dispatch:
    inputs:
      name:
        description: 'Who triggered this build?'
        required: true
        default: 'Maintainer (via GitHub)'
      reset:
        description: 'Reset cached markdown files'
        required: false
        default: false
        type: boolean
jobs:
  full-build:
    name: "Build Full Site"
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      pages: write
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv/
    steps:
      - name: "Checkout Lesson"
        uses: actions/checkout@v4

      - name: Pull Docker Image
        run: docker pull carpentries/workbench-docker:0.0.1-alpha  # Pull from public Docker Hub

      - name: Run Container and Build Site
        uses: addnab/docker-run-action@v3
        with:
          image: "carpentries/workbench-docker:0.0.1-alpha"
          options: -v ${{ github.workspace }}:/home/rstudio/lesson
          shell: Rscript {0}
          run: |
            reset <- "${{ github.event.inputs.reset }}" == "true"
            setwd("/home/rstudio/lesson")
            sandpaper::package_cache_trigger(TRUE)
            sandpaper:::ci_deploy(reset = reset)
          
      #     shell: bash
      #     run: |
      #       cd /home/rstudio/lesson
      #       Rscript -e "sandpaper::ci_deploy(reset = reset)"
      #       echo "Build complete."

      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v4
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: _site  # Ensure this matches the site output directory

      # - name: "Docker Build Site"
      #   uses: addnab/docker-run-action@v3
      #   with:
      #       image: carpentries/workbench-docker:0.0.1-alpha
      #       shell: Rscript {0}
      #       run: |
      #         reset <- "${{ github.event.inputs.reset }}" == "true"
      #         setwd("/home/rstudio/lesson")
      #         sandpaper::package_cache_trigger(TRUE)
      #         sandpaper:::ci_deploy(reset = reset)
        
